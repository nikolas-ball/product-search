{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { loader } from \"graphql.macro\";\nimport List from \"../components/List\";\nimport SearchBar from \"../components/SearchBar\";\nimport { useQuery } from \"@apollo/client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getProductsQuery = loader(\"../graphql/query/Get_Products.graphql\");\n\nvar Home = function Home() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchPhrase = _useState2[0],\n      setSearchPhrase = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clicked = _useState4[0],\n      setClicked = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fakeData = _useState6[0],\n      setFakeData = _useState6[1];\n\n  useEffect(function () {\n    var data = useQuery(getProductsQuery);\n    console.log(data);\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [!clicked && _jsx(Text, {\n      style: styles.title,\n      children: \"Programming Languages\"\n    }), _jsx(SearchBar, {\n      searchPhrase: searchPhrase,\n      setSearchPhrase: setSearchPhrase,\n      clicked: clicked,\n      setClicked: setClicked\n    }), !fakeData ? _jsx(ActivityIndicator, {\n      size: \"large\"\n    }) : _jsx(List, {\n      searchPhrase: searchPhrase,\n      data: fakeData,\n      setClicked: setClicked\n    })]\n  });\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  root: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    width: \"100%\",\n    marginTop: 20,\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginLeft: \"10%\"\n  }\n});","map":{"version":3,"sources":["/Users/nickball/Documents/interviews/product-search/screens/Home.tsx"],"names":["React","useState","useEffect","loader","List","SearchBar","useQuery","getProductsQuery","Home","searchPhrase","setSearchPhrase","clicked","setClicked","fakeData","setFakeData","data","console","log","styles","root","title","StyleSheet","create","justifyContent","alignItems","width","marginTop","fontSize","fontWeight","marginLeft"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAOA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,IAAMC,gBAAgB,GAAGJ,MAAM,CAAC,uCAAD,CAA/B;;AAEA,IAAMK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,kBAAwCP,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCX,QAAQ,EAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAGAZ,EAAAA,SAAS,CAAC,YAAM;AAUd,QAAMa,IAAI,GAAGT,QAAQ,CAACC,gBAAD,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEG,MAAM,CAACC,IAA5B;AAAA,eACG,CAACR,OAAD,IAAY,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACE,KAApB;AAAA;AAAA,MADf,EAGE,KAAC,SAAD;AACE,MAAA,YAAY,EAAEX,YADhB;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,UAAU,EAAEC;AAJd,MAHF,EASG,CAACC,QAAD,GACC,KAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC;AAAxB,MADD,GAGC,KAAC,IAAD;AACE,MAAA,YAAY,EAAEJ,YADhB;AAEE,MAAA,IAAI,EAAEI,QAFR;AAGE,MAAA,UAAU,EAAED;AAHd,MAZJ;AAAA,IADF;AAqBD,CAzCD;;AA2CA,eAAeJ,IAAf;AAEA,IAAMU,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,cAAc,EAAE,QADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADyB;AAK/BJ,EAAAA,KAAK,EAAE;AACLK,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE,MAJP;AAKLC,IAAAA,UAAU,EAAE;AALP;AALwB,CAAlB,CAAf","sourcesContent":["// Home.js\nimport React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  SafeAreaView,\n  ActivityIndicator,\n} from \"react-native\";\nimport { loader } from \"graphql.macro\";\n\nimport List from \"../components/List\";\nimport SearchBar from \"../components/SearchBar\";\nimport { useQuery } from \"@apollo/client\";\n\nconst getProductsQuery = loader(\"../graphql/query/Get_Products.graphql\");\n\nconst Home = () => {\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  const [clicked, setClicked] = useState(false);\n  const [fakeData, setFakeData] = useState();\n\n  // get data from the fake api\n  useEffect(() => {\n    // const getData = async () => {\n    //   const apiResponse = await fetch(\n    //     \"https://my-json-server.typicode.com/kevintomas1995/logRocket_searchBar/languages\"\n    //   );\n    //   const data = await apiResponse.json();\n    //   setFakeData(data);\n    // };\n    // getData();\n\n    const data = useQuery(getProductsQuery);\n    console.log(data);\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.root}>\n      {!clicked && <Text style={styles.title}>Programming Languages</Text>}\n\n      <SearchBar\n        searchPhrase={searchPhrase}\n        setSearchPhrase={setSearchPhrase}\n        clicked={clicked}\n        setClicked={setClicked}\n      />\n      {!fakeData ? (\n        <ActivityIndicator size=\"large\" />\n      ) : (\n        <List\n          searchPhrase={searchPhrase}\n          data={fakeData}\n          setClicked={setClicked}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  root: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    width: \"100%\",\n    marginTop: 20,\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginLeft: \"10%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}